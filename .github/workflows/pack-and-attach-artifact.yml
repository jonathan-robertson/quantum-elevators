name: üì¶ Pack and Attach Artifact

on:
  workflow_dispatch:
    inputs:
      release_tag:
        description: 'Tag of the existing release'
        required: true
        type: string
      server_version:
        description: '7DTD Server Version'
        required: true
        default: '1.4-b8'
        type: choice
        options:
          - '1.4-b8'
          - '1.3-b9'

permissions:
  contents: write


# NOTE: in `run` steps, all 3 of these options are valid ways to reference these env vars: 
# ${{ env.VERSION }}
# ${VERSION}
# $VERSION
env:
  PROJECT_FOLDER: Source
  VERSION: ${{ github.event.inputs.release_tag }}
  GAME_VERSION: "${{ github.event.inputs.server_version }}"
  ARCHIVE_NAME: ${{ github.event.repository.name }}-${{ github.event.inputs.release_tag }}-7dtd-${{ github.event.inputs.server_version }}.zip
  SUBFOLDER: ${{ github.event.repository.name }}

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
      - name: üöö Checkout repository
        uses: actions/checkout@v4
        with:
          ref: "${{ env.VERSION }}"
          
      - name: üîç Verify release exists
        run: |
          gh release view "${{ env.VERSION }}" || { echo "Release named '${{ env.VERSION }}' not found; please target a tag with an existing Release."; exit 1; }
        env:
          GH_TOKEN: ${{ github.token }}

      - name: üöõ Checkout 7dtd-references
        uses: actions/checkout@v4
        with:
          repository: "${{ github.repository_owner }}/7dtd-references"
          token: "${{ secrets.REFERENCES_TOKEN }}"
          path: "7dtd-references"

      - name: üìù Update ModInfo.xml version and project references
        run: |
          # update ModInfo version to match tag (in case updating it in source was forgotten)
          sed -i "s|<Version value=\"[^\"]*\" />|<Version value=\"{${{ env.VERSION }}}\" />|" ModInfo.xml

          # update reference paths
          sed -i "s|<HintPath>..\\\\..\\\\..\\\\..\\\\..\\\\..\\\\Program Files (x86)\\\\Steam\\\\steamapps\\\\common\\\\7 Days to Die Dedicated Server|<HintPath>..\\\\7dtd-references\\\\${GAME_VERSION}|g" ${{ env.PROJECT_FOLDER }}/*.csproj

          # update build release version
          sed -i "s|DLL_VERSION = \"test-version\"|DLL_VERSION = \"${{ env.version }}\"|g" ${{ env.PROJECT_FOLDER }}/ModApi.cs

          # update build target version
          sed -i "s|BUILD_TARGET = \"test-target\"|BUILD_TARGET = \"$GAME_VERSION\"|g" ${{ env.PROJECT_FOLDER }}/ModApi.cs


          echo "project file references were modified to the following:"
          cat "${{ env.PROJECT_FOLDER }}/*.csproj"

      - name: üßê Install mono
        run: |
          sudo apt-get update
          sudo apt-get install -y mono-complete

      - name: üõª Restore NuGet packages
        run: |
          nuget restore ${{ github.event.repository.name }}.sln

      - name: üì¶ Build and package artifact
        run: |
          msbuild ${{ github.event.repository.name }}.sln /p:Configuration=Release
          mkdir "${{ env.SUBFOLDER }}"
          cp -r Config "${{ env.SUBFOLDER }}/"
          cp ModInfo.xml "${{ env.SUBFOLDER }}/"
          cp README.md "${{ env.SUBFOLDER }}/"
          cp CHANGELOG.md "${{ env.SUBFOLDER }}/"
          cp "*.dll" "${{ env.SUBFOLDER }}/"
          zip -r "${{ env.ARCHIVE_NAME }}.zip" "${{ env.SUBFOLDER }}"
          ls -alr

      - name: ‚¨ÜÔ∏è Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.ARCHIVE_NAME }}
          path: ${{ env.ARCHIVE_NAME }}.zip

      - name: üìã Attach artifact
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.VERSION }}
          files: ${{ env.ARCHIVE_NAME }}.zip
